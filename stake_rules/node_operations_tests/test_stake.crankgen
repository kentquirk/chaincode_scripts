LAMBDA NDAU = 10**8
LAMBDA MIN_TX_QTY = 100 * NDAU
LAMBDA MAX_AGGREGATE_STAKE = 50000 * NDAU
LAMBDA DAY = 1_000_000 * 60 * 60 * 24
LAMBDA RESOLVE_STAKE_FEE = 5 * NDAU



VAR costake = 0,1,13,49900,50000
LAMBDA costake_napu = costake * NDAU

VAR primary_stake = 0,1,300,49900,50000
LAMBDA primary_stake_napu = primary_stake * NDAU

VAR existing_target_stake = 0,300,49900,50000
LAMBDA existing_target_stake_napu = existing_target_stake * NDAU

VAR tx_qty = 0,1,99,101,50000,50001
LAMBDA tx_qty_napu = tx_qty * NDAU

LAMBDA is_primary = 0,1

LAMBDA from_target_napu = primary_stake_napu if is_primary else existing_target_stake_napu
LAMBDA aggregate_napu = costake_napu + primary_stake_napu + existing_target_stake_napu

LAMBDA rules_addr = "rule account address"
LAMBDA primary_addr = "primary account address"
LAMBDA stake_to_addr = rules_addr if is_primary else primary_addr
LAMBDA target_addr = primary_addr if is_primary else "third party address"

LAMBDA expect_bool = ((tx_qty_napu >= MIN_TX_QTY) and (aggregate_napu+tx_qty_napu <= MAX_AGGREGATE_STAKE))
LAMBDA expect = 0 if expect_bool else -1

BEGIN_TEMPLATE
clear
event EVENT_STAKE
load ../node_operations.chbin

; expect_bool == $expect_bool
; expect = $expect
; (($tx_qty_napu >= $MIN_TX_QTY) and ($aggregate_napu+$tx_qty_napu <= $MAX_AGGREGATE_STAKE))


; Stack:
; from_target =  $from_target_napu
; from_primary = $primary_stake_napu
; aggregate =    $aggregate_napu
; tx =           {
;                   TARGET:   $target_addr,
;                   STAKE_TO: $stake_to_addr,
;                   RULES:    $rules_addr,
;                   QTY:      $tx_qty_napu,
;                }
; target_addr =   $target_addr
; stake_to_addr = $stake_to_addr
; rules_addr =    $rules_addr
; primary_addr =  $primary_addr

push $primary_addr
push $rules_addr
push $stake_to_addr
push $target_addr
push {3:$target_addr,5:$stake_to_addr,8:$rules_addr,11:$tx_qty_napu}
push $aggregate_napu
push $primary_stake_napu
push $from_target_napu

run
expect -- $expect
