;  ----- ---- --- -- -
;  Copyright 2019 Oneiro NA, Inc. All Rights Reserved.
; 
;  Licensed under the Apache License 2.0 (the "License").  You may not use
;  this file except in compliance with the License.  You can obtain a copy
;  in the file LICENSE in the source distribution or at
;  https://www.apache.org/licenses/LICENSE-2.0.txt
;  - -- --- ---- -----

; these tests are way more elaborate than they need to be because we may want them to be
; more sophisticated someday; we use limited test cases, but these can be expanded if
; the logic gets more sophisticated.

LAMBDA NDAU = 10**8
LAMBDA DAY = 1_000_000 * 60 * 60 * 24

VAR costake = 0,1,49900,50000
LAMBDA costake_napu = costake * NDAU

VAR primary_stake = 0,1,49900,50000
LAMBDA primary_stake_napu = primary_stake * NDAU

VAR existing_target_stake = 0,300,50000
LAMBDA existing_target_stake_napu = existing_target_stake * NDAU

LAMBDA is_primary = 0,1

LAMBDA from_target_napu = primary_stake_napu if is_primary else existing_target_stake_napu
LAMBDA aggregate_napu = costake_napu + primary_stake_napu + existing_target_stake_napu

LAMBDA rules_addr = "rule account address"
LAMBDA primary_addr = "primary account address"
LAMBDA stake_to_addr = rules_addr if is_primary else primary_addr
LAMBDA target_addr = primary_addr if is_primary else "third party address"

LAMBDA expect_bool = True
LAMBDA expect = 0 if expect_bool else -1
LAMBDA expect2 = 90 * DAY

BEGIN_TEMPLATE
clear
event EVENT_UNSTAKE
load ../node_operations.chbin

; expect_bool == $expect_bool
; expect = $expect
; expect2 = $expect2

; Stack:
; from_target =  $from_target_napu
; from_primary = $primary_stake_napu
; aggregate =    $aggregate_napu
; tx =           {}
; target_addr =   $target_addr
; stake_to_addr = $stake_to_addr
; rules_addr =    $rules_addr
; primary_addr =  $primary_addr

push $primary_addr
push $rules_addr
push $stake_to_addr
push $target_addr
push {}
push $aggregate_napu
push $primary_stake_napu
push $from_target_napu

run
expect $expect
expect $expect2
