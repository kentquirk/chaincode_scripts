;  ----- ---- --- -- -
;  Copyright 2019 Oneiro NA, Inc. All Rights Reserved.
; 
;  Licensed under the Apache License 2.0 (the "License").  You may not use
;  this file except in compliance with the License.  You can obtain a copy
;  in the file LICENSE in the source distribution or at
;  https://www.apache.org/licenses/LICENSE-2.0.txt
;  - -- --- ---- -----

LAMBDA NDAU = 10**8
LAMBDA MIN_TX_QTY = 100 * NDAU
LAMBDA MAX_AGGREGATE_STAKE = 50000 * NDAU
LAMBDA DAY = 1_000_000 * 60 * 60 * 24
LAMBDA RESOLVE_STAKE_FEE = 5 * NDAU



VAR costake = 0,1,13,49900,50000
LAMBDA costake_napu = costake * NDAU

VAR primary_stake = 0,1,300,49900,50000
LAMBDA primary_stake_napu = primary_stake * NDAU

VAR existing_target_stake = 0,300,49900,50000
LAMBDA existing_target_stake_napu = existing_target_stake * NDAU

VAR target_balance = 1,2,4,5,99,50000
LAMBDA target_balance_napu = target_balance * NDAU

LAMBDA is_primary = 0,1

LAMBDA from_target_napu = primary_stake_napu if is_primary else existing_target_stake_napu
LAMBDA aggregate_napu = costake_napu + primary_stake_napu + existing_target_stake_napu

LAMBDA rules_addr = "rule account address"
LAMBDA primary_addr = "primary account address"
LAMBDA stake_to_addr = rules_addr if is_primary else primary_addr
LAMBDA target_addr = primary_addr if is_primary else "third party address"

LAMBDA expect = target_balance_napu if target_balance_napu < RESOLVE_STAKE_FEE else RESOLVE_STAKE_FEE

BEGIN_TEMPLATE
clear
event EVENT_RESOLVESTAKE
load ../node_operations.chbin

; expect = $expect
; target_balance_napu = $target_balance_napu
; RESOLVE_STAKE_FEE = $RESOLVE_STAKE_FEE


; Stack:
; from_target =  $from_target_napu
; from_primary = $primary_stake_napu
; aggregate =    $aggregate_napu
; tx =           {}
; target_acct =   {1:$target_addr, ACCT_BALANCE:$target_balance_napu}
; stake_to_addr = $stake_to_addr
; rules_addr =    {1:$rules_addr, ACCT_BALANCE:$NDAU}
; primary_addr =  $primary_addr

push $primary_addr
push {1:$rules_addr, ACCT_BALANCE:$NDAU}
push $stake_to_addr
push {1:$target_addr, ACCT_BALANCE:$target_balance_napu}
push {}
push $aggregate_napu
push $primary_stake_napu
push $from_target_napu

run
expect $expect
