;  ----- ---- --- -- -
;  Copyright 2019, 2020 The Axiom Foundation. All Rights Reserved.
; 
;  Licensed under the Apache License 2.0 (the "License").  You may not use
;  this file except in compliance with the License.  You can obtain a copy
;  in the file LICENSE in the source distribution or at
;  https://www.apache.org/licenses/LICENSE-2.0.txt
;  - -- --- ---- -----


; Node Goodness (active node ranking)
;
; STACK:
;   total stake
;   account data
;   address
;   total delegation
;   vote history for this node
;   timestamp of most recent RegisterNode
;
; We compute the goodness according to the following pseudocode:
;
; history_size = 20
; genesis = <official timestamp of blockchain genesis>
;
; def age_bonus(registration):
;   return min(days_since_registration, six_months)
;
; def node_goodness(total_stake, total_delegated_ndau, vote_stats, registration):
;   weight = (total_stake * stake_weight) + total_delegated_ndau
;
;   # penalize nodes that don't participate
;   penalties = non_vote_penalty * sum(for v in vote_stats if not v.voted)
;   # penalize participation against consensus more strongly
;   penalties += byzantine_penalty * sum(for v in vote_stats if v.against_consensus)
;
;   deduct actual penalties from maximum penalty to create bonus for non-penalties
;   penalty_maximum = history_size * (non_vote_penalty + byzantine_penalty)
;   penalty_bonus = penalty_maximum - penalties
;   return weight * penalty_bonus * age_bonus(registration)
;
; at the moment this algorithm does not use the address or account data passed to it
; they are provided so future goodness functions can use them if appropriate

; these are the field IDs of the records passed in the voting history
VOTED = 121
BYZANTINE = 122
VOTEDF = 123
BYZANTINEF = 124

; voting against consensus is a much larger penalty than failing to vote
; history size is defined at https://github.com/oneiro-ndev/metanode/blob/180b6970aaf3df5cdd2ba05607e5ca36e08f5d56/pkg/meta/state/vote_stats.go#L14
HISTORY_SIZE = 20       ; see github link above - don't change this
NON_VOTE_PENALTY = 1    ; small penalty for missing a vote
BYZANTINE_PENALTY = 10  ; big penalty for voting against consensus

; multiply stake weight by this value to increase its importance relative to delegation power
STAKE_WEIGHT = 5

; divide stake/delegated ndau total by this to create a more reasonable-looking range
; this is purely for appearance and ease of visual comparison
NDAU_SCALE = 1000

DAY_LENGTH = 86400000000            ; number of milliseconds in one day
SIX_MONTHS = 180                    ; days in six SIX_MONTHS

handler EVENT_DEFAULT {
    ;; start by computing the age bonus - number of days since node registration
                                    ; rn_ts vote_history total_delegation address account_data total_stake
    now                             ; rn_ts vote_history total_delegation address account_data total_stake now
    roll 6                          ; vote_history total_delegation address account_data total_stake now rn_ts
    sub                             ; vote_history total_delegation address account_data total_stake age_us
    push DAY_LENGTH                 ; vote_history total_delegation address account_data total_stake age_us DAY_LENGTH
    div                             ; vote_history total_delegation address account_data total_stake age_days

    ; bonus is limited to six months - if it's more than that, replace it with six months

    dup                             ; vote_history total_delegation address account_data total_stake age_days age_days
    push SIX_MONTHS                 ; vote_history total_delegation address account_data total_stake age_days age_days SIX_MONTHS
    lt                              ; vote_history total_delegation address account_data total_stake age_days lt
    ifz                             ; vote_history total_delegation address account_data total_stake age_days
        drop                        ; vote_history total_delegation address account_data total_stake
        push SIX_MONTHS             ; vote_history total_delegation address account_data total_stake age_days (new)
    endif
    ;; now tuck this away at the bottom of the stack where we can retrieve it later
    tuck 5                          ; age_bonus vote_history total_delegation address account_data total_stake

    push STAKE_WEIGHT               ; age_bonus vote_history total_delegation address account_data total_stake stake_weight
    mul                             ; age_bonus vote_history total_delegation address account_data weighted_unscaled_stake

    roll 3                          ; age_bonus vote_history address account_data weighted_unscaled_stake total_delegation
    add                             ; age_bonus vote_history address account_data unscaled_weight
    push NDAU_SCALE                 ; age_bonus vote_history address account_data unscaled_weight NDAU_SCALE
    div                             ; age_bonus vote_history address account_data weight

    roll 3                          ; age_bonus address account_data weight vote_history

    ; calculate weight of voting history
    ; for each of the last HISTORY_SIZE rounds you get NON_VOTE_PENALTY if you didn't vote
    ; and you get BYZANTINE_PENALTY if you voted against consensus

    deco non_vote_penalty VOTEDF    ; age_bonus address account_data weight vote_history
    deco byzantine_penalty BYZANTINEF; age_bonus address account_data weight vote_history

    dup                             ; age_bonus address account_data weight vote_history vote_history
    fieldl VOTEDF                   ; age_bonus address account_data weight vote_history non_vote_count_list
    sum                             ; age_bonus address account_data weight vote_history non_vote_count
    push NON_VOTE_PENALTY           ; age_bonus address account_data weight vote_history non_vote_count NON_VOTE_PENALTY
    mul                             ; age_bonus address account_data weight vote_history non_vote_penalty

    swap                            ; age_bonus address account_data weight non_vote_penalty vote_history
    fieldl BYZANTINEF               ; age_bonus address account_data weight non_vote_penalty byzantine_penalty_count_list
    sum                             ; age_bonus address account_data weight non_vote_penalty byzantine_penalty_count          
    push BYZANTINE_PENALTY          ; age_bonus address account_data weight non_vote_penalty byzantine_penalty_count BYZANTINE_PENALTY
    mul                             ; age_bonus address account_data weight non_vote_penalty byzantine_penalty

    ; add the penalties and subtract from MAXIMUM_PENALTY, then multiply by the weight
    ; i.e. you get points for NOT being penalized, so it acts as a multiplicative bonus

    add                             ; age_bonus address account_data weight penalty
    ; calculate the maximum possible penalty
    push NON_VOTE_PENALTY           ; age_bonus address account_data weight penalty NON_VOTE_PENALTY
    push BYZANTINE_PENALTY          ; age_bonus address account_data weight penalty NON_VOTE_PENALTY BYZANTINE_PENALTY
    add                             ; age_bonus address account_data weight penalty penalty_sum
    push HISTORY_SIZE               ; age_bonus address account_data weight penalty penalty_sum HISTORY_SIZE
    mul                             ; age_bonus address account_data weight penalty maximum_penalty
    swap                            ; age_bonus address account_data weight maximum_penalty penalty
    sub                             ; age_bonus address account_data weight penalty_score
    mul                             ; age_bonus address account_data penalized_weight

    ; retrieve the age bonus
                                    ; age_bonus address account_data penalized_weight
    roll 3                          ; address account_data penalized_weight age_bonus
    mul                             ; goodness
}

; called via deco; therefore needs no args: it always gets a list entry
func non_vote_penalty(0) {
                                    ; node_round_stats
    field VOTED                     ; stats_voted
    ifz                             ; zero == false == didn't vote
        push NON_VOTE_PENALTY
    else
        zero
    endif
}

; called via deco; therefore needs no args: it always gets a list entry
func byzantine_penalty(0) {
                                    ; node_round_stats
    field BYZANTINE                 ; stats_againstconsensus
    ifnz                            ; == true == voted against consensus
        push BYZANTINE_PENALTY
    else
        zero
    endif
}
