;  ----- ---- --- -- -
;  Copyright 2019 Oneiro NA, Inc. All Rights Reserved.
; 
;  Licensed under the Apache License 2.0 (the "License").  You may not use
;  this file except in compliance with the License.  You can obtain a copy
;  in the file LICENSE in the source distribution or at
;  https://www.apache.org/licenses/LICENSE-2.0.txt
;  - -- --- ---- -----

; we want to test across a range of dates
SVAR now = 2019-09-18T15:21:43Z, 2029-05-11T03:46:40.570549Z
; and a range of node registration times
SVAR registration = 2019-05-11T03:46:41Z, 2019-09-18T12:00:00Z
SVAR genesis = 2019-05-11T03:46:40.570549Z
; from these, we can calculate the age bonus
LAMBDA age_bonus = ((ts(now)-ts(registration))/(ts(now)-ts(genesis)))**4

VAR total_stake = 1000,5000,12345,100000
VAR total_delegated_ndau = 1000,5000,54321,100000
VAR missed_votes = 0,1,5,20
VAR byz_votes = 0,1,5,8,20
; this was originally range(20) but now we're just going to sample to reduce combinatorics
LAMBDA vote_stats = [{121:i<(20-missed_votes),122:i<byz_votes} for i in [0, 1, 2, 3, 7, 8, 13, 19]]

VAR stakemul = 1
LAMBDA weight = (stakemul * total_stake) + total_delegated_ndau
LAMBDA penalties = sum(2 for v in vote_stats if not v[121]) + sum(5 for v in vote_stats if v[122])
VAR pd = 40
LAMBDA expect = 0 if penalties > pd else int((weight - ((penalties * weight) / pd)) * age_bonus)

BEGIN_TEMPLATE
; testing this file
load ../node_goodness.chbin

; set up preconditions
clear

set-now $now
; age bonus:       $age_bonus
; missed votes:    $missed_votes
; byzantine votes: $byz_votes
; penalties:       $penalties
push $registration           ; timestamp of most recent RegisterNode tx
push $vote_stats             ; vote history
push $total_delegated_ndau   ; total delegation
push "ndaddress"             ; address
push {}                      ; account data
push $total_stake            ; total stake
event 0

run

;; these calculations are performed in different ways, and might encounter
;; small errors from differences between floating-point and integer math.

expect $expect --delta 1
