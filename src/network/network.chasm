handler EVENT_DEFAULT {
    fail
}

handler EVENT_NOMINATENODEREWARD {
    zero ; auto-succeed: we know that at least 1 signature was valid, from external checks
}

handler 16 { ; COMMANDVALIDATORCHANGE
    call NetworkValidation
}

handler EVENT_CHANGEVALIDATION {
    call NetworkValidation
}

func NetworkValidation(1) {
    NETWORK_MASK = 0x7      ; 0b_0111
    NETWORK_REQD = 1

    BPC_MASK = 0x38         ; 0b_0011_1000
    BPC_REQD = 1

                            ; ... sigs
    ; check that the BPC sig is present
    push BPC_MASK
    push BPC_REQD
    call CheckMask
    ifnz
        fail
    endif

    push NETWORK_MASK
    push NETWORK_REQD
    call CheckMask ; returns a valid return code
}


func CheckMask(3) {
                    ; sigs mask nreqd_sigs
    tuck 2          ; nreqd_sigs sigs mask
    and             ; nreqd_sigs masked_sigs
    call HasN       ; ... (nmasked_sigs >= 2)
    not             ; ... returncode
}

func HasN(2) {
            ; nreqd_sigs sigs
    count1s ; nreqd_sigs nsigs
    lte     ; (nreqd_sigs <= nsigs)
}
