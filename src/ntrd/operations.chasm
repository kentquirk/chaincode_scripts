handler EVENT_DEFAULT {
    zero    ; chaincode can Just Succeed, here, because
            ; we validate that at least one signature
            ; is valid
}

handler EVENT_DELEGATE {
    fail
}

handler EVENT_LOCK {
    fail
}

handler EVENT_CHANGEVALIDATION {
    call LowPairsOneEach
}


func LowPairsOneEach(1) {
                    ; sigs
    push 0xc        ; sigs 0b1100
    one             ; sigs 0b1100 1
    call CheckMask  ; sigs 0b1100 1 returncode
    ; if the first pair has a nonzero return code,
    ; fail fast
    ifnz
        fail
    endif
    ; check the other pair of ntrd sigs
    drop2           ; sigs
    push 0x3        ; sigs 0b0011
    one
    call CheckMask  ; sigs 0b0011 1 returncode
                    ; this return code Just Works
}

func CheckMask(3) {
                    ; sigs mask nreqd_sigs
    tuck 2          ; nreqd_sigs sigs mask
    and             ; nreqd_sigs masked_sigs
    call HasN       ; ... (nmasked_sigs >= 2)
    not             ; ... returncode
}

func HasN(2) {
            ; nreqd_sigs sigs
    count1s ; nreqd_sigs nsigs
    lte     ; (nreqd_sigs <= nsigs)
}
