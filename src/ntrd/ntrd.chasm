handler EVENT_DEFAULT {
    one ; invalid by default
}

handler EVENT_CHANGEVALIDATION {
    ; first check if there are 2 bpc sigs
                    ; ... sigs
    push 0x70       ; sigs 0b0111_0000
    push 2          ; sigs 0b0111_0000 2
    call CheckMask  ; sigs 0b0111_0000 2 returncode
    ifz
        zero        ; ... 0 (OK)
        ret
    endif
    drop2           ; sigs

    ; if not using the BPC override, we need at least
    ; one sig from the low pair of bits and one from
    ; the next pair of bits
    call LowPairsOneEach
}

handler EVENT_RELEASEFROMENDOWMENT {
                    ; ... tx sigs
    swap            ; sigs tx
    field TX_QUANTITY   ; sigs qty

    dup             ; sigs qty qty
    push 5000       ; sigs qty qty 5000
    lt              ; sigs qty (qty<5000)
    ifnz
        ; qty < 5000: only 1 of low 2 sigs are required
        push 0x3    ; qty sigs 0b0011
        one         ; qty sigs 0b0011 1
        call CheckMask  ; ... returncode
        ret
    endif
                    ; sigs qty (where qty >= 5000)
    dup             ; sigs qty qty
    push 20000      ; sigs qty qty 20000
    lte             ; sigs qty (qty <= 20000)
    ifnz
        ; qty 5000-20000
        swap        ; qty sigs
        call LowPairsOneEach
        ret
    endif
    ; qty > 20000
                    ; sigs qty (where qty > 20000)
    swap            ; qty sigs
    call LowPairsOneEach
    ifnz    ; not enough ntrd sigs
        fail
    endif

    ; now ensure we have at least one bpc
    push 0x70       ; sigs 0b0111_0000
    one             ; sigs 0b0111_0000 1
    call CheckMask  ; ... returncode
}

func LowPairsOneEach(1) {
                    ; sigs
    push 0xc        ; sigs 0b1100
    one             ; sigs 0b1100 1
    call CheckMask  ; sigs 0b1100 1 returncode
    ; if the first pair has a nonzero return code,
    ; fail fast
    ifnz
        fail
    endif
    ; check the other pair of ntrd sigs
    drop2           ; sigs
    push 0x3        ; sigs 0b0011
    one
    call CheckMask  ; sigs 0b0011 1 returncode
                    ; this return code Just Works
}

func CheckMask(3) {
                    ; sigs mask nreqd_sigs
    tuck 2          ; nreqd_sigs sigs mask
    and             ; nreqd_sigs masked_sigs
    call HasN       ; ... (nmasked_sigs >= 2)
    not             ; ... returncode
}

func HasN(2) {
            ; nreqd_sigs sigs
    count1s ; nreqd_sigs nsigs
    lte     ; (nreqd_sigs <= nsigs)
}
